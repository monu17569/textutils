{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aria-checked","onClick","toggleMode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","split","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b61b6b88.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active \" href=\"/\">About</a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" aria-checked=\"false\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\nNavbar.propTypes = {\r\n  title : PropTypes.string.isRequired,\r\n  aboutText : PropTypes.string.isRequired,};\r\n\r\nNavbar.defaultProps = {\r\n  title :\"Set title here\",\r\n  aboutText : \"About\"\r\n};","import React , {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = ()=> {\r\n      // console.log(\"Uppercase was clicked :\" + text);\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"Converted to uppercase ! \", \"success\");\r\n  }\r\n  const handleLoClick = ()=> {\r\n    // console.log(\"Uppercase was clicked :\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase ! \", \"success\");\r\n  }\r\n  const handleClearClick = ()=> {\r\n    // console.log(\"Uppercase was clicked :\" + text);\r\n    let newText = ''\r\n    setText(newText);\r\n    props.showAlert(\"Text Cleared! \", \"success\");\r\n  }\r\n\r\n  const handleOnChange = (event)=> {\r\n    // console.log(\"OnChange\");\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n  \r\n  return (\r\n    <>\r\n    <div className='container'style={{color:props.mode === 'dark' ? 'white':'#042743'}} >\r\n      <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\"> \r\n          <textarea className=\"form-control\"  value={text} onChange={handleOnChange} style={{backgroundColor:props.mode === 'dark' ? 'grey':'white' , color:props.mode === 'dark' ? 'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 my-2\" onClick={handleUpClick}>Convert to UpperCase</button> \r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button> \r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button> \r\n    </div>\r\n    <div className=\"container my-3\" style={{color:props.mode === 'dark' ? 'white':'#042743'}}>\r\n      <h2>Your text Summary</h2>\r\n      <p>{text.split(\" \").length-1} <b>words</b>  and  {text.length} <b>characters</b></p>\r\n      <p>{0.08 * text.split(\" \").length} Minutes read.</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0 ?text :\"Enter Something to Preview!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n} \r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\nimport React, {useState} from 'react';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //whether dark mode is enabled or not \n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message, type) =>{\n    setAlert({\n      msg : message,\n      type : type \n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  }\n\n  const toggleMode = () =>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled.\", \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled.\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TextUtils\" mode={mode}  toggleMode={toggleMode}/>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading =\"Enter the text to Analize\" mode={mode} />\n        {/* <About/> */}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}